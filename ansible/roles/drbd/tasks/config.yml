---
# - name: Configuring DRBD
#   template:
#     src: etc/drbd.d/global_common.conf.j2
#     dest: /etc/drbd.d/global_common.conf
#     owner: root
#     group: root
#     mode: u=rw,g=r,o=r
#   become: true

# - name: Configure resource DRBD
#   ansible.builtin.template:
#     src: "{{ item }}"
#     dest: /etc/drbd.d/
#     owner: root
#     group: root
#     mode: u=rw,g=r,o=r
#   become: true
#   with_fileglob:
#     - ../templates/etc/drbd.d/*.res

# - name: Loading DRBD Kernel Module
#   modprobe:
#     name: drbd
#     state: present
#   become: true

- name: Checking DRBD Mirror Devices Creation Status
  stat:
    path: "/etc/drbd.d/.{{ item['resource'] }}.created"
  register: _drbd_mirror_device_creation_status
  with_items: "{{ drbd_disks }}"

- name: Creating DRBD Mirror Devices
  expect:
    command: drbdadm create-md {{ item['item']['resource'] }}
    responses:
      "[need to type 'yes' to confirm]": yes
  become: true
  register: _drbd_mirror_device_created
  with_items: "{{ _drbd_mirror_device_creation_status['results'] }}"
  when: not item['stat']['exists']

- name: Marking DRDB Mirror Devices Created
  file:
    path: "/etc/drbd.d/.{{ item['item']['item']['resource'] }}.created"
    state: touch
  become: true
  with_items: "{{ _drbd_mirror_device_created['results'] }}"
  when: item['changed']

- name: Bringing DRBD Mirror Devices Up
  command: drbdadm up {{ item['resource'] }}
  become: true
  register: _drbd_mirror_device_up
  with_items: "{{ drbd_disks}}"
  when: >
        _drbd_mirror_device_created['changed']

- name: Defining DRBD Primary
  command: drbdadm -- --overwrite-data-of-peer primary {{ item['resource'] }}/0
  become: true
  register: _drbd_primary
  with_items: "{{ drbd_disks }}"
  when: >
        _drbd_mirror_device_up['changed'] and
        inventory_hostname == groups[drbd_cluster][0]

- name: Waiting For DRBD Sync To Complete
  command: drbd-overview
  become: true
  register: _drbd_sync
  until: ('Inconsistent' not in _drbd_sync['stdout'])
  retries: 100
  delay: 30
  when: >
        _drbd_primary['changed'] and
        inventory_hostname == groups[drbd_cluster][0]

- name: Partitioning DRBD Device
  filesystem:
    fstype: "{{ item['filesystem'] }}"
    dev: "{{ item['device'] }}"
  become: true
  with_items: "{{ drbd_disks }}"
  when: >
        inventory_hostname == groups[drbd_cluster][0] and
        _drbd_sync['changed']

- name: Creating DRBD Mountpoint
  file:
    path: "{{ item['mountpoint'] }}"
    state: directory
  become: true
  with_items: "{{ drbd_disks }}"

- name: Updating /etc/fstab Mounts
  mount:
    path: "{{ item['mountpoint'] }}"
    src: "{{ item['device'] }}"
    fstype: "{{ item['filesystem'] }}"
    opts: "{{ item['mountopts'] }}"
    state: present
  become: true
  with_items: "{{ drbd_disks }}"
