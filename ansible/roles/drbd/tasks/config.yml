---
- name: Configuring DRBD
  template:
    src: etc/drbd.d/global_common.conf.j2
    dest: /etc/drbd.d/global_common.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  become: true

- name: Configure resource DRBD
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /etc/drbd.d/
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  become: true
  with_fileglob:
    - ../templates/etc/drbd.d/*.res

- name: Loading DRBD Kernel Module
  modprobe:
    name: drbd
    state: present
  become: true

- name: Checking DRBD Mirror Devices Creation Status
  stat:
    path: "/etc/drbd.d/.{{ drbd_resource_lower }}.created"
  register: _drbd_mirror_device_creation_status

- debug:
    var: _drbd_mirror_device_creation_status

- name: Creating DRBD Mirror Devices
  expect:
    command: drbdadm create-md {{{ drbd_resource_lower }}
    responses:
      "[need to type 'yes' to confirm]": "yes"
  become: true
  register: _drbd_mirror_device_created
  when:
    - not _drbd_mirror_device_creation_status['stat']['exists']
    - drbd_node != 'backup'
  notify: restart drbd

- name: Marking DRDB Mirror Devices Created
  file:
    path: "/etc/drbd.d/.{{ drbd_resource_lower }}.created"
    state: touch
  become: true
  when: _drbd_mirror_device_created['changed']

- name: Bringing DRBD Mirror Devices Up
  command: drbdadm up {{ drbd_resource_lower }}
  become: true
  register: _drbd_mirror_device_up
  when: _drbd_mirror_device_created['changed']

- name: Defining DRBD Primary
  command: drbdadm -- --overwrite-data-of-peer primary {{ drbd_resource_lower }}
  become: true
  register: _drbd_primary
  when:
    #- _drbd_mirror_device_up['changed']
    - inventory_hostname == groups['drbd_cluster'][0]

- name: Waiting For DRBD Sync from Primary to Secondary To Complete
  command: drbdadm status
  become: true
  register: _drbd_primary_secondary_sync
  until: ('Inconsistent' not in _drbd_primary_secondary_sync['stdout'])
  retries: 100
  delay: 30
  when:
    #- _drbd_mirror_device_up['changed']
    - inventory_hostname == groups['drbd_cluster'][0]

- name: Defining DRBD {{ drbd_resource_upper }} on primary
  expect:
    command: drbdadm --stacked create-md {{ drbd_resource_upper }}
    responses:
      "[need to type 'yes' to confirm]": "yes"
  become: true
  register: _drbd_r0_U_stacked
  when:
    #- _drbd_mirror_device_up['changed']
    - drbd_node == 'primary'
  notify: restart drbd

- name: Defining DRBD {{ drbd_resource_upper }} on backup
  expect:
    command: drbdadm create-md {{ drbd_resource_upper }}
    responses:
      "[need to type 'yes' to confirm]": "yes"
  become: true
  register: _drbd_r0_U_backup
  when:
    #- _drbd_mirror_device_up['changed']
    - drbd_node == 'backup'
  notify: restart drbd

- name: Defining DRBD {{ drbd_resource_upper }} stacked resource
  command: drbdadm --stacked adjust {{ drbd_resource_upper }}
  become: true
  register: _drbd_r0_U_primary_stacked
  when:
    #- _drbd_mirror_device_up['changed']
    - drbd_node == 'primary'

- name: Defining DRBD {{ drbd_resource_upper }} stacked on backup
  command: drbdadm adjust {{ drbd_resource_upper }}
  become: true
  register: _drbd_r0_U_backup_stacked
  when:
    #- _drbd_mirror_device_up['changed']
    - drbd_node == 'backup'

- name: Defining DRBD Primary on {{ drbd_resource_upper }}
  command: drbdadm --stacked -- --overwrite-data-of-peer primary {{ drbd_resource_upper }}
  become: true
  register: _drbd_r0_U_primary
  when:
    #- _drbd_mirror_device_up['changed']
    - drbd_node == 'primary'

- name: Waiting For DRBD Sync from Primary to Backup To Complete
  command: drbdadm status
  become: true
  register: _drbd_primary_backup_sync
  until: ('Inconsistent' not in _drbd_primary_backup_sync['stdout'])
  retries: 100
  delay: 30
  when:
    #- _drbd_mirror_device_up['changed']
    - drbd_node == 'backup'

- name: Partitioning DRBD Device
  filesystem:
    fstype: "{{ drbd_disk_filesystem }}"
    dev: "{{ drbd_disk['device'] }}"
  become: true
  when:
    - _drbd_primary_backup_sync['changed']
    - inventory_hostname == groups['drbd_cluster'][0]

- name: Creating DRBD Mountpoint
  file:
    path: "{{ item['drbd_disk_mountpoint'] }}"
    state: directory
  become: true

# - name: Updating /etc/fstab Mounts
#   mount:
#     path: "{{ drbd_disk_mountpoint }}"
#     src: "{{ drbd_disk['device'] }}"
#     fstype: "{{ drbd_disk_filesystem }}"
#     opts: default
#     state: present
#   become: true
