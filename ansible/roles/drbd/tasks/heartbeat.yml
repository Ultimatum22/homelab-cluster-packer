---
- name: Checking For Existing Heartbeat Authkey
  stat:
    path: /etc/ha.d/authkeys
  register: _drbd_heartbeat_authkey_check

- name: Creating Heartbeat Authkey On Master
  shell: dd if=/dev/urandom count=4 2>/dev/null | openssl dgst -sha1 | awk '{ print $2 }'
  register: _drbd_heartbeat_authkey
  no_log: true
  when: >
        not _drbd_heartbeat_authkey_check['stat']['exists'] and
        inventory_hostname == groups['drbd_cluster'][0]

- name: Setting Heartbeat Authkey On Master
  set_fact:
    drbd_heartbeat_authkey: "{{ _drbd_heartbeat_authkey['stdout'] }}"
  no_log: true
  when: >
        not _drbd_heartbeat_authkey_check['stat']['exists'] and
        inventory_hostname == groups['drbd_cluster'][0]

- name: Setting Heartbeat Authkey On Master
  set_fact:
    drbd_heartbeat_authkey: "{{ hostvars[groups['drbd_cluster'][0]]['drbd_heartbeat_authkey'] }}"
  no_log: true
  when: >
        not _drbd_heartbeat_authkey_check['stat']['exists'] and
        inventory_hostname != groups['drbd_cluster'][0]

- name: Configuring Heartbeat Authkey
  template:
    src: etc/ha.d/authkeys.j2
    dest: /etc/ha.d/authkeys
    mode: "u=rw,g=,o="
  become: true
  notify: restart heartbeat
  when: not _drbd_heartbeat_authkey_check['stat']['exists']

- name: Configuring Heartbeat
  template:
    src: etc/ha.d/ha.cf.j2
    dest: /etc/ha.d/ha.cf
  become: true
  notify: restart heartbeat

- name: Configuring Heartbeat Resources
  template:
    src: etc/ha.d/haresources.j2
    dest: /etc/ha.d/haresources
  become: true
  notify: restart heartbeat
